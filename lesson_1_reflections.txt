the diff functionality  will help me to understand the difference between the two files.the minus sign shows what has  been missing on the new file and the plus sign shows what has been added.
it create  a differnt image in my head as i will remember to use -u fr unified difference.



How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
In my opinion  verion history helps in finding bugs  and errors more easily
other advantages would be the less worry that my work would be ruined.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
pros--
more control over the versions.
logical fixes to the versions as we know when to commit.
less cluttering.
cons
power or system failure,
less control over the system
more cluttering


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
to provide more control over the repository as if we save each file seperately the version controlling would be a mess.


How can you use the commands git log and git diff to view the history of files?
we  can querry with the command git diff and see the differnce made beween the commits or we can use git log --stat to see it directly which
 files have been changed .


How might using version control make you more confident to make changes that could break something?
beacause we would know exacctly in which commit the bug is introduced and the searching time for bugs is very less



Now that you have your workspace set up, what do you want to try using Git for?
making new projects and working on others projects as well.
